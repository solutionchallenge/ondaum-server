{
    "swagger": "2.0",
    "info": {
        "description": "This is a API server for Ondaum",
        "title": "Ondaum API",
        "contact": {},
        "version": "1.0"
    },
    "host": "ondaum.revimal.me",
    "basePath": "/api/v1",
    "paths": {
        "/_schema/supported-emotions": {
            "get": {
                "description": "List supported emotions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schema"
                ],
                "summary": "List supported emotions",
                "operationId": "ListSupportedEmotion",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Emotion"
                            }
                        }
                    }
                }
            }
        },
        "/_schema/supported-features": {
            "get": {
                "description": "List supported features",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schema"
                ],
                "summary": "List supported features",
                "operationId": "ListSupportedFeature",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Feature"
                            }
                        }
                    }
                }
            }
        },
        "/_ws/chat": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Connect Chat Websocket. Reference the notion page for more information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Connect Chat Websocket",
                "operationId": "ConnectChatWebsocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Websocket Session ID (optional; if not provided, the server will use the most recent non-archived conversation or create a new one if none exists)",
                        "name": "session_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/websocket.ResponseWrapper"
                        }
                    },
                    "426": {
                        "description": "Upgrade Required",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/chat/:session_id": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get chat with histories and summary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Get chat",
                "operationId": "GetChat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.ChatWithSimplifiedSummaryAndHistoriesDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/chat/:session_id/archive": {
            "post": {
                "description": "Archive a chat to prevent it from being accessed again and allow to summarize it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Archive a chat",
                "operationId": "ArchiveChat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.ArchiveChatHandlerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/chat/:session_id/summary": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get summary of the chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Get summary",
                "operationId": "GetSummary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.SimplifiedSummaryDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/chats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List chats with summaries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "List chats",
                "operationId": "ListChat",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/chat.ChatWithSimplifiedSummaryDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/oauth/google/auth": {
            "post": {
                "description": "Receives the authorization code (obtained from Google OAuth) and exchanges it for access and refresh tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth"
                ],
                "summary": "Exchange Google OAuth Code for Tokens",
                "operationId": "ExchangeGoogleOAuthCode",
                "parameters": [
                    {
                        "description": "Payload containing the authorization code received from Google OAuth",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/oauth.AuthGoogleHandlerRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Redirect URI (optional; the client's callback URL where Google was redirect with the code)",
                        "name": "redirect",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/oauth.AuthGoogleHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/oauth/google/start": {
            "get": {
                "description": "Returns the Google OAuth authorization URL, which includes the specified redirect URI (the URL where Google will send the authorization code after login).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oauth"
                ],
                "summary": "Get Google OAuth Authorization URL",
                "operationId": "StartGoogleOAuth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redirect URI (the client's callback URL where Google will redirect with the code)",
                        "name": "redirect",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/oauth.StartGoogleHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/user/addition": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates or creates the user's additional information including concerns and emotions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update or Create User Additional Information",
                "operationId": "UpsertUserAddition",
                "parameters": [
                    {
                        "description": "User additional information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpsertAdditionHandlerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UpsertAdditionHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/user/privacy": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates or creates the user's privacy information including gender and birthday.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update or Create User Privacy Information",
                "operationId": "UpsertUserPrivacy",
                "parameters": [
                    {
                        "description": "User privacy information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpsertPrivacyHandlerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UpsertPrivacyHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/user/self": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the authenticated user's profile, including basic information and optional onboarding data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get Current Authenticated User Profile",
                "operationId": "GetSelfUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.SimplifiedUserDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chat.ArchiveChatHandlerResponse": {
            "type": "object",
            "properties": {
                "finished": {
                    "type": "boolean"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "chat.ChatWithSimplifiedSummaryAndHistoriesDTO": {
            "type": "object",
            "properties": {
                "histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chat.HistoryDTO"
                    }
                },
                "id": {
                    "type": "string"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "is_finished": {
                    "type": "boolean"
                },
                "session_id": {
                    "type": "string"
                },
                "started_date": {
                    "type": "string"
                },
                "summary": {
                    "$ref": "#/definitions/chat.SimplifiedSummaryDTO"
                },
                "user_id": {
                    "type": "string"
                },
                "user_timezone": {
                    "type": "string"
                }
            }
        },
        "chat.ChatWithSimplifiedSummaryDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "is_finished": {
                    "type": "boolean"
                },
                "session_id": {
                    "type": "string"
                },
                "started_date": {
                    "type": "string"
                },
                "summary": {
                    "$ref": "#/definitions/chat.SimplifiedSummaryDTO"
                },
                "user_id": {
                    "type": "string"
                },
                "user_timezone": {
                    "type": "string"
                }
            }
        },
        "chat.HistoryDTO": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "role": {
                    "type": "string"
                },
                "when": {
                    "type": "string"
                }
            }
        },
        "chat.SimplifiedSummaryDTO": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "common.Emotion": {
            "type": "string",
            "enum": [
                "joy",
                "sadness",
                "anger",
                "surprise",
                "fear",
                "disgust",
                "neutral"
            ],
            "x-enum-varnames": [
                "EmotionJoy",
                "EmotionSadness",
                "EmotionAnger",
                "EmotionSurprise",
                "EmotionFear",
                "EmotionDisgust",
                "EmotionNeutral"
            ]
        },
        "common.Feature": {
            "type": "string",
            "enum": [
                "escalate_crisis",
                "suggest_test_phq9",
                "suggest_test_gad7",
                "suggest_test_pss",
                "end_conversation"
            ],
            "x-enum-varnames": [
                "FeatureEscalateCrisis",
                "FeatureSuggestTestPHQ9",
                "FeatureSuggestTestGAD7",
                "FeatureSuggestTestPSS",
                "FeatureEndConversation"
            ]
        },
        "http.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "oauth.AuthGoogleHandlerRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "oauth.AuthGoogleHandlerResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "oauth.StartGoogleHandlerResponse": {
            "type": "object",
            "properties": {
                "auth_url": {
                    "type": "string"
                }
            }
        },
        "user.SimplifiedAdditionDTO": {
            "type": "object",
            "properties": {
                "concerns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "emotions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Emotion"
                    }
                }
            }
        },
        "user.SimplifiedPrivacyDTO": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                }
            }
        },
        "user.SimplifiedUserDTO": {
            "type": "object",
            "properties": {
                "addition": {
                    "$ref": "#/definitions/user.SimplifiedAdditionDTO"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "privacy": {
                    "$ref": "#/definitions/user.SimplifiedPrivacyDTO"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.UpsertAdditionHandlerRequest": {
            "type": "object",
            "properties": {
                "concerns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "emotions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.Emotion"
                    }
                }
            }
        },
        "user.UpsertAdditionHandlerResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "boolean"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "user.UpsertPrivacyHandlerRequest": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                }
            }
        },
        "user.UpsertPrivacyHandlerResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "boolean"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "websocket.Action": {
            "type": "string",
            "enum": [
                "noop",
                "reject",
                "data",
                "notify"
            ],
            "x-enum-varnames": [
                "PredefinedActionNoop",
                "PredefinedActionReject",
                "PredefinedActionData",
                "PredefinedActionNotify"
            ]
        },
        "websocket.ResponseWrapper": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/websocket.Action"
                },
                "message_id": {
                    "type": "string"
                },
                "payload": {},
                "session_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}